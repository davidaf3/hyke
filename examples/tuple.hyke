main :: (Bool, Nat, [((Bool,), Nat, Nat)]) = (f 2)

f :: Nat -> (Bool, Nat, [((Bool,), Nat, Nat)])
f 1 = (True, 1, [((True,), 2, 1), ((True,), 3, 1)])
f n = (n < 4, n * 2, [((False,), n + 1, n), ((False,), n + 2, n)])